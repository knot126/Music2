(defun split-string (str split-char)
	(do ((items (list)) axis) ((eql (length str) 0) items)
		(setq axis (or (position split-char str :from-end t) 0))
		(setq items (cons (subseq str (if (not (eql axis 0)) (+ axis 1) 0)) items))
		(setq str (subseq str 0 axis))
		(format t "axis ~a items ~a str ~a~%" axis items str)
	)
)
(defun test-split-string ()
	(format t "~a~%" (split-string "asdf asdf asdf" #\ ))
	(format t "~a~%" (split-string "cats and dogs are eating my house" #\ ))\
	(format t "~a~%" (split-string "double  spaces OwO  :3" #\ ))
	(format t "~a~%" (split-string " at start  and end " #\ ))
	(format t "~a~%" (split-string "not|a|space|char" #\|))
)
(test-split-string)
